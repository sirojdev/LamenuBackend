openapi: 3.0.3
info:
  title: Courier documentation
  description: Courier documentation
  version: 1.0.0
servers:
  - url: 'http://127.0.0.1:9000/v1/'
    description: 'Local server'
  - url: 'http://188.166.167.80:9000/v1/'
    description: "Host server"
  - url: 'https://api.lamenu.uz/v1/'
    description: "Domain server"
  - url: 'https:// api-beta.lamenu.uz/v1/'
    description: "Beta  server"
  - url: 'https://api-dev.lamenu.uz/v1/'
    description: "Developer server"
  - url: 'https://api-back.lamenu.uz/v1/'
    description: "Backend server"
tags:
  - name: Auth
    description: information about profile
  - name: Profile
    description: information about profile
  - name: Order courier's
    description: get orders courier's
  - name:  Transactions
    description: get transactions courier's
  - name: Chat
    description: get chat messages

paths:

  /courier/chat/merchant:
    get:
      tags:
        - Chat
      security:
        - bearerAuth: [ ]
      description: Get merchant info for courier
      responses:
        '200':
          description: Successfully retrieved info merchant
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/StaffDto"
        '204':
          description: No content
        '401':
          description: Unauthorized

  /courier/chat/messages:
    get:
      tags:
        - Chat
      security:
        - bearerAuth: [ ]
      description: Get messages from courier
      responses:
        '200':
            description: Successfully retrieved messages
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/ChatMessageSaveDto"
        '204':
          description: No content
        '401':
          description: Unauthorized

  /courier/transaction:
    post:
      tags:
        - Transactions
      security:
        - bearerAuth: [ ]
      description: "new transaction"
      requestBody:
        description: " if branch id not null courier give money to branch if orderId not null courier get money from client"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourierTransactionRequest"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourierTransactionRequest"
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"

  /courier/transaction/all:
    get:
      tags:
        - Transactions
      security:
        - bearerAuth: [ ]
      description: "Get all  transactions"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CourierTransactionDto"
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"



  /courier/device:
    post:
      tags:
        - Auth
      description: "Get device token"
      parameters:
        - name: "appKey"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "long"
      requestBody:
        description: "A JSON object receive device token"
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                uuid:
                  type: string
                brand:
                  type: string
                build:
                  type: string
                model:
                  type: string
                osVersion:
                  type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/DeviceModel"
        "204":
          description: "No Content"

  /courier/auth:
    post:
      tags:
        - Auth
      description: "Auth courier sign in"
      security:
        - bearerAuth: [ ]
      requestBody:
        description: "A JSON object receive with sign up"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: "string"
                password:
                  type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/StaffDto"
        "204":
          description: "No Content"

  /courier/logout:
    post:
      tags:
        - Auth
      description: "logout courier "
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: "OK"


  /courier/profile:
    get:
      tags:
        - Profile
      security:
        - bearerAuth: [ ]
      description: "Get profile info"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourierInfoDto"
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"

  /courier/update:
    patch:
      tags:
        - Profile
      requestBody:
        description: "receive staff dto"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StaffDto"
      security:
        - bearerAuth: [ ]
      description: "update profile info"
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"

  /courier/firebase:
    post:
      tags:
        - Profile
      security:
        - bearerAuth: [ ]
      description: "Get profile device model"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceModel"
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"



  /courier/order:
    get:
      tags:
        - Order courier's
      description: Get active orders courier's
      security:
        - bearerAuth: [ ]
      parameters:
        - name: "status"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/DataPage"
        "204":
          description: "No content"

  /courier/order/join:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - Order courier's
      description: Get order (join courier) if orderId is null or order belong to other courier 405
      parameters:
        - name: "orderId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "long"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataPage"
        "405":
          description: "Method not allowed"

  /courier/order/onway:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Order courier's
      description: get ready order from branch READY->ON WAY  if order status not READY or this order belong to other courier 405 method not allowed
      parameters:
        - name: "orderId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "long"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataPage"
        "405":
          description: "Method not allowed"

  /courier/order/delivered:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Order courier's
      description: delivered order  if order status not ONWAY or this order belong to other courier 405 method not allowed
      parameters:
        - name: "orderId"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "long"
        - name: "long"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "double"
        - name: "lat"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "double"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataPage"
        "405":
          description: "Method not allowed"

  /courier/order/{id}:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Order courier's
      description: get order by id if this order belong to other courier 405 , order not found  404
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "long"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataPage"
        "405":
          description: "Method not allowed"
        "404":
          description: "Not Found"

  /upload/image:
    post:
      tags:
        - Profile
      description: upload image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: string

  /courier/order/open:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Order courier's
      description: get open orders(operator tomonidan tastiqlangan lekin hali hech qaysi courier oziga join qilmagan orderlar)
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataPage"
        "405":
          description: "Method not allowed"
        "404":
          description: "Not Found"

#//==================================================================================================SCHEMAS
components:
  schemas:

    CourierDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        firstName:
          type: "string"
        lastName:
          type: "string"
        birthDay:
          type: "string"
          format: "yyyy-MM-dd"
        image:
          type: "string"
        gender:
          type: "string"
        status:
          type: "boolean"
        balance:
          type: "integer"
          format: "double"


    TextModel:
      type: "object"
      properties:
        uz:
          type: "string"
        ru:
          type: "string"
        eng:
          type: "string"
    DeviceModel:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        uuid:
          type: "string"
        osVersion:
          type: "string"
        model:
          type: "string"
        brand:
          type: "string"
        build:
          type: "string"
        firebaseToken:
          type: "string"
        ip:
          type: "string"
        token:
          type: "string"
        blockedUntil:
          type: "string"
          format: "date-time"
        code:
          type: "string"
        action:
          type: "string"
        expAction:
          type: "boolean"
        phone:
          type: "string"

    BranchDto:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          $ref: "#/components/schemas/TextModel"

    StaffDto:
      type: object
      properties:
        id:
          type: "integer"
          format: "long"
        token:
          type: "string"
        image:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        birthDay:
          type: "string"
          format: "yyyy-MM-dd"
        phone:
          type: "string"
        position:
          type: string
        gender:
          type: string
        password:
          type: string
        newPassword:
          type: string

    CourierInfoDto:
      type: object
      properties:
        id:
          type: "integer"
          format: "long"
        firstName:
          type: "string"
        lastName:
          type: "string"
        gender:
          type: "string"
        image:
          type: "string"
        birthDay:
          type: "string"
          format: "yyyy-MM-dd"
        type:
          type: string
        phone:
          type: string
        balance:
          type: integer
          format: "double"

    DataPage:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Order"
        total:
          type: integer
          format: "long"



    Details:
      type: object
      properties:
        createdAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        updatedAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        deliveredAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        deliveryAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        totalPrice:
          type: "number"
          format: "double"
        totalDiscount:
          type: "number"
          format: "double"
        comment:
          type: "string"
        collectorId:
          type: integer
          format: "long"
        courierId:
          type: integer
          format: "long"
    AddressDetails:
      type: "object"
      properties:
        building:
          type: "string"
        entrance:
          type: "string"
        code:
          type: "string"
        floor:
          type: integer
        comment:
          type: "string"
    AddressDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        type:
          type: "string"
        status:
          type: "string"
        details:
          $ref: "#/components/schemas/AddressDetails"
        description:
          type: "string"
        latitude:
          type: "integer"
          format: "double"
        longitude:
          type: "integer"
          format: "double"

    OrderPriceDto:
      type: object
      properties:
        id:
          type: integer
          format: "long"
        orderId:
          type: integer
          format: "long"
        deliveryPrice:
          type: integer
          format: "long"
        deliveryDiscount:
          type: integer
          format: "long"
        deliveryPromo:
          type: integer
          format: "long"
        productPrice:
          type: integer
          format: "long"
        productDiscount:
          type: integer
          format: "long"
        productPromo:
          type: integer
          format: "long"
        totalPrice:
          type: integer
          format: "long"
        totalDiscount:
          type: integer
          format: "long"

    UserDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
#        badge:
#          $ref: '#/components/schemas/BadgeDto'
        phone:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        image:
          type: "string"
        birthDay:
          type: "string"
        token:
          type: "string"

    CartItem:
      type: object
      properties:
        product:
          $ref: "#/components/schemas/ProductDto"
        count:
          type: integer
          format: "long"
    Payment:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        icon:
          type: string


    Order:
        type: "object"
        properties:
          id:
            type: "integer"
            format: "long"
          serviceType:
            type: string
          status:
            type: string
          user:
            $ref: "#/components/schemas/UserDto"
          collector:
            $ref: "#/components/schemas/StaffDto"
          merchant:
            $ref: "#/components/schemas/MerchantDto"
          branch:
            $ref: "#/components/schemas/BranchDto"
          products:
            type: array
            items:
              $ref: "#/components/schemas/CartItem"
          paymentType:
            type: integer
            format: "long"
          payment:
            $ref: "#/components/schemas/Payment"
          isPaid:
            type: boolean
          comment:
            type: string
          totalDiscount:
            type: integer
            format: "long"
          address:
            $ref: "#/components/schemas/AddressDto"
          courier:
            $ref: "#/components/schemas/StaffDto"
          productCount:
            type: "integer"
          totalPrice:
            type: "integer"
            format: "double"
          createdAt:
            type: "string"
            format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
          updatedAt:
            type: "string"
            format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
          deleted:
            type: boolean
          total:
            type: integer
            format: "long"

    ChatMessageSaveDto:
      type: object
      properties:
        id:
          type: integer
        message:
          type: string
        fromId:
          type: integer
        toId:
          type: integer
        operatorId:
          type: integer
        operator:
          $ref: "#/components/schemas/StaffDto"
        sender:
          type: string
        time:
          type: string
          format: date-time

    MerchantDto:
      type: object
      properties:
        id:
          type: integer
        sub:
          type: string
        logo:
          type: string
        name:
          $ref: "#/components/schemas/TextModel"
        phone:
          type: string
        password:
          type: string
        isActive:
          type: boolean
        token:
          type: string

    CourierTransactionDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        orderId:
          type: "integer"
          format: "long"
        courier:
          $ref: "#/components/schemas/CourierDto"
        time:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        branch:
          $ref: "#/components/schemas/BranchDto"
        order:
          $ref: "#/components/schemas/Order"
        amount:
          type: "integer"
          format: "double"

    CourierTransactionRequest:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        branch:
          $ref: "#/components/schemas/BranchDto"
        order:
          $ref: "#/components/schemas/Order"
        amount:
          type: "integer"
          format: "double"

    ProductDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        name:
          $ref: '#/components/schemas/TextModel'
        description:
          $ref: '#/components/schemas/TextModel'
        image:
          type: string
        costPrice:
          type: "integer"
          format: "long"
        active:
          type: boolean
        categoryId:
          type: "integer"
          format: "long"
        count:
          type: "integer"
          format: "long"


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid