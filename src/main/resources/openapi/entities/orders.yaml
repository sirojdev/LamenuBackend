openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /orders:
    get:
      summary: Retrieve orders
      description: Retrieve a list of orders based on status, type, limit, and offset.
      parameters:
        - name: "status"
          in: "query"
          description: "Filter orders by status."
          required: false
          schema:
            type: "string"
        - name: "type"
          in: "query"
          description: "Filter orders by type."
          required: false
          schema:
            type: "string"
        - name: "limit"
          in: "query"
          description: "Maximum number of orders to retrieve."
          required: false
          schema:
            type: "integer"
        - name: "offset"
          in: "query"
          description: "Number of orders to skip before starting to return results."
          required: false
          schema:
            type: "integer"
      responses:
        '200':
          description: "List of orders."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/OrderDto'
        '204':
          description: No orders found.

  /live:
    get:
      summary: Retrieve live orders
      description: Retrieve a list of live orders based on type.
      parameters:
        - name: "type"
          in: "query"
          description: "Filter live orders by type."
          required: false
          schema:
            type: "string"
      responses:
        '200':
          description: "List of live orders."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/OrderDto'
        '204':
          description: No live orders found.
  /history:
    get:
      summary: Retrieve order history
      description: Retrieve a list of orders from the history.
      responses:
        '200':
          description: "List of orders from the history."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/OrderDto'
        '204':
          description: No orders found in history.
  /order/{id}:
    get:
      summary: Retrieve an order by ID
      description: Retrieve an order by ID.
      parameters:
        - name: "id"
          in: "path"
          description: "ID of order to retrieve."
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "Order retrieved successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
        '400':
          description: Invalid ID provided or missing ID in request.
        '404':
          description: Order not found.
  /order:
    post:
      summary: Add a new order
      description: Add a new order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: "Order added successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'
    put:
      summary: Update an existing order
      description: Update an existing order.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDto'
      responses:
        '200':
          description: "Order updated successfully."
        '400':
          description: Invalid request.
    delete:
      summary: Delete an order by ID
      description: Delete an order by ID.
      parameters:
        - name: "id"
          in: "path"
          description: "ID of order to delete."
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "Order deleted successfully."
        '400':
          description: Invalid ID provided or missing ID in request.
        '500':
          description: Failed to delete order.

components:
  schemas:
    OrderDto:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        status:
          type: "string"
          enum: ["PENDING", "PROCESSING", "COMPLETED", "CANCELLED"]
        type:
          type: "string"
          enum: ["BUY", "SELL"]
        price:
          type: "number"
          format: "double"
        quantity:
          type: "integer"
        createdAt:
          type: "string"
          format: "date-time"
        updatedAt:
          type: "string"
          format: "date-time"
  
