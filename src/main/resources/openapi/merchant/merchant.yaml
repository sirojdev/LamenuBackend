openapi: "3.0.3"
info:
  title: "Lamenu documentation for Users"
  description: "Lamenu documentation allows to you view the schema of Lamenu project"
  version: "1.0.0"
servers:
  - url: 'http://0.0.0.0:8181/api/v1/'
  - url: 'http://188.166.167.80:8181/api/v1/'

tags:
  - name: Auth
    description: Login endpoints

  - name: Branches
    description: Endpoints related to branch

  - name: Categories
    description: Endpoints related to category

  - name: Extras
    description: Endpoints related to extra

  - name: Labels
    description: Endpoints related to label

  - name: Menus
    description: Endpoints related to menu

  - name: Options
    description: Endpoints related to option

  - name: Products
    description: Endpoints related to product

  - name: Restaurants
    description: Endpoints related to restaurant

paths:

  /merchant/settengs/extras:
    get:
      tags:
        - Extras
      description: "Returns a list of all extras"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/ExtraDto"
        "204":
          description: "No Content"
  /merchant/settengs/extra:
    post:
      tags:
        - Extras
      description: "Adds a new extra"
      requestBody:
        description: "A JSON object containing updated extra information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/ExtraDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Extras
      description: "Adds a new extra"
      requestBody:
        description: "A JSON object containing updated extra information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/ExtraDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/extra/{id}:
    get:
      tags:
        - Extras
      description: "Returns a extra by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/ExtraDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Extras
      description: "Deletes a extra by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settengs/branches:
    get:
      tags:
        - Branches
      description: "Returns a list of all branches"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/BranchDto"
        "204":
          description: "No Content"
  /merchant/settengs/branch:
    post:
      tags:
        - Branches
      description: "Adds a new branch"
      requestBody:
        description: "A JSON object containing updated branch information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/BranchDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Branches
      description: "Updates an existing branch"
      requestBody:
        description: "A JSON object containing updated branch information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/BranchDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/branch/{id}:
    get:
      tags:
        - Branches
      description: "Returns a branch by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/BranchDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Branches
      description: "Deletes a branch by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settengs/categories:
    get:
      tags:
        - Categories
      description: "Returns a list of all categories"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/CategoryDto"
        "204":
          description: "No Content"
  /merchant/settengs/category:
    post:
      tags:
        - Categories
      description: "Adds a new category"
      requestBody:
        description: "A JSON object containing updated category information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/CategoryDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Categories
      description: "Adds a new category"
      requestBody:
        description: "A JSON object containing updated category information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/CategoryDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/category/{id}:
    get:
      tags:
        - Categories
      description: "Returns a category by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/CategoryDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Categories
      description: "Deletes a category by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settengs/lables:
    get:
      tags:
        - Labels
      description: "Returns a list of all lables"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/LabelDto"
        "204":
          description: "No Content"
  /merchant/settengs/lable:
    post:
      tags:
        - Labels
      description: "Adds a new lable"
      requestBody:
        description: "A JSON object containing updated lable information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/LabelDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Labels
      description: "Adds a new lable"
      requestBody:
        description: "A JSON object containing updated lable information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/LabelDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/lable/{id}:
    get:
      tags:
        - Labels
      description: "Returns a lable by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/LabelDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Labels
      description: "Deletes a lable by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settengs/menus:
    get:
      tags:
        - Menus
      description: "Returns a list of all menus"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/MenuDto"
        "204":
          description: "No Content"
  /merchant/settengs/menu:
    post:
      tags:
        - Menus
      description: "Adds a new menu"
      security:
        - bearerAuth: [ ]
      requestBody:
        description: "A JSON object containing updated menu information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/MenuDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Menus
      description: "Adds a new menu"
      security:
        - bearerAuth: [ ]
      requestBody:
        description: "A JSON object containing updated menu information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/MenuDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/menu/{id}:
    get:
      tags:
        - Menus
      description: "Returns a menu by its ID"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/MenuDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Menus
      description: "Deletes a menu by its ID"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settengs/options:
    get:
      tags:
        - Options
      description: "Returns a list of all option"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/OptionDto"
        "204":
          description: "No Content"
  /merchant/settengs/option:
    post:
      tags:
        - Options
      description: "Adds a new option"
      requestBody:
        description: "A JSON object containing updated option information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/OptionDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Options
      description: "Adds a new option"
      requestBody:
        description: "A JSON object containing updated option information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/OptionDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/option/{id}:
    get:
      tags:
        - Options
      description: "Returns a option by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/OptionDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Options
      description: "Deletes a option by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settengs/products:
    get:
      tags:
        - Products
      description: "Returns a list of all products"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/ProductDto"
        "204":
          description: "No Content"
  /merchant/settengs/product:
    post:
      tags:
        - Products
      description: "Adds a new product"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/ProductDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Products
      description: "Adds a new product"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/ProductDto"
      responses:
        "200":
          description: "OK"
  /merchant/settengs/product/{id}:
    get:
      tags:
        - Products
      description: "Returns a product by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/ProductDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Products
      description: "Deletes a product by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchants:
    get:
      tags:
        - Restaurants
      description: "Returns a list of all Restaurants"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "./components.yaml#/components/schemas/MerchantDto"
        "204":
          description: "No Content"
  /merchant:
    post:
      tags:
        - Restaurants
      description: "Adds a new restaurant"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/MerchantDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Restaurants
      description: "Update the restaurant"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "./components.yaml#/components/schemas/MerchantDto"
      responses:
        "200":
          description: "OK"

  /merchant/{id}:
    get:
      tags:
        - Restaurants
      description: "Returns a restaurant by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "./components.yaml#/components/schemas/MerchantDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Restaurants
      description: "Deletes a restaurant by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"


components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
