openapi: "3.0.3"
info:
  title: "Lamenu documentation Merchant"
  description: "Lamenu documentation Merchant allows to you view the schema of Merchant Lamenu project"
  version: "1.0.0"
servers:
  - url: 'http://0.0.0.0:9000/api/v1/'
  - url: 'http://188.166.167.80:9000/api/v1/'

tags:
  - name: Auth
    description: Login endpoints

  - name: Branches
    description: Endpoints related to branch

  - name: Categories
    description: Endpoints related to category

  - name: Extras
    description: Endpoints related to extra

  - name: Labels
    description: Endpoints related to label

  - name: Menus
    description: Endpoints related to menu

  - name: Options
    description: Endpoints related to option

  - name: Products
    description: Endpoints related to product

  - name: Outcomes
    description: Endpoints related to outcomes

  - name: Posters
    description: Endpoints related to posters

  - name: Apps
    description: Endpoints related to apps

  - name: Payments
    description: Endpoints related to payment systems

  - name: Sms Gateways
    description: Endpoints related to sms gateways

  - name: Telephony
    description: Endpoints related to telephony

  - name: Delivery
    description: Endpoints related to delivery

paths:

  /merchant/settings/extras:
    get:
      tags:
        - Extras
      description: "Returns a list of all extras"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ExtraDto"
        "204":
          description: "No Content"
  /merchant/settings/extra:
    post:
      tags:
        - Extras
      description: "Adds a new extra"
      requestBody:
        description: "A JSON object containing updated extra information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtraDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Extras
      description: "Adds a new extra"
      requestBody:
        description: "A JSON object containing updated extra information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExtraDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/extra/{id}:
    get:
      tags:
        - Extras
      description: "Returns a extra by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtraDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Extras
      description: "Deletes a extra by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/branches:
    get:
      tags:
        - Branches
      description: "Returns a list of all branches"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BranchDto"
        "204":
          description: "No Content"
  /merchant/settings/branch:
    post:
      tags:
        - Branches
      description: "Adds a new branch"
      requestBody:
        description: "A JSON object containing updated branch information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BranchDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Branches
      description: "Updates an existing branch"
      requestBody:
        description: "A JSON object containing updated branch information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BranchDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/branch/{id}:
    get:
      tags:
        - Branches
      description: "Returns a branch by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BranchDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Branches
      description: "Deletes a branch by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/categories:
    get:
      tags:
        - Categories
      description: "Returns a list of all categories"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/CategoryDto"
        "204":
          description: "No Content"
  /merchant/settings/category:
    post:
      tags:
        - Categories
      description: "Adds a new category"
      requestBody:
        description: "A JSON object containing updated category information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Categories
      description: "Adds a new category"
      requestBody:
        description: "A JSON object containing updated category information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/category/{id}:
    get:
      tags:
        - Categories
      description: "Returns a category by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Categories
      description: "Deletes a category by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/labels:
    get:
      tags:
        - Labels
      description: "Returns a list of all lables"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/LabelDto"
        "204":
          description: "No Content"
  /merchant/settings/label:
    post:
      tags:
        - Labels
      description: "Adds a new lable"
      requestBody:
        description: "A JSON object containing updated lable information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Labels
      description: "Adds a new lable"
      requestBody:
        description: "A JSON object containing updated lable information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/label/{id}:
    get:
      tags:
        - Labels
      description: "Returns a lable by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Labels
      description: "Deletes a lable by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/menus:
    get:
      tags:
        - Menus
      description: "Returns a list of all menus"
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/MenuDto"
        "204":
          description: "No Content"
  /merchant/settings/menu:
    post:
      tags:
        - Menus
      description: "Adds a new menu"
      security:
        - bearerAuth: [ ]
      requestBody:
        description: "A JSON object containing updated menu information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Menus
      description: "Adds a new menu"
      security:
        - bearerAuth: [ ]
      requestBody:
        description: "A JSON object containing updated menu information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/menu/{id}:
    get:
      tags:
        - Menus
      description: "Returns a menu by its ID"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Menus
      description: "Deletes a menu by its ID"
      security:
        - bearerAuth: [ ]
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/options:
    get:
      tags:
        - Options
      description: "Returns a list of all option"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OptionDto"
        "204":
          description: "No Content"
  /merchant/settings/option:
    post:
      tags:
        - Options
      description: "Adds a new option"
      requestBody:
        description: "A JSON object containing updated option information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OptionDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Options
      description: "Adds a new option"
      requestBody:
        description: "A JSON object containing updated option information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OptionDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/option/{id}:
    get:
      tags:
        - Options
      description: "Returns a option by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OptionDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Options
      description: "Deletes a option by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"


  /merchant/settings/products:
    get:
      tags:
        - Products
      description: "Returns a list of all products"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProductDto"
        "204":
          description: "No Content"
  /merchant/settings/product:
    post:
      tags:
        - Products
      description: "Adds a new product"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Products
      description: "Adds a new product"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/product/{id}:
    get:
      tags:
        - Products
      description: "Returns a product by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Products
      description: "Deletes a product by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"


  /merchant/settings/posters:
    get:
      tags:
        - Posters
      description: "Returns a list of all posters"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PosterDto"
        "204":
          description: "No Content"
  /merchant/settings/poster:
    post:
      tags:
        - Posters
      description: "Adds a new poster"
      requestBody:
        description: "A JSON object containing updated poster information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosterDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Posters
      description: "Adds a new poster"
      requestBody:
        description: "A JSON object containing updated poster information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosterDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/poster/{id}:
    get:
      tags:
        - Posters
      description: "Returns a poster by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosterDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Posters
      description: "Deletes a product by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/apps:
    get:
      tags:
        - Apps
      description: "Returns a list of all apps"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AppDto"
        "204":
          description: "No Content"
  /merchant/settings/app:
    post:
      tags:
        - Apps
      description: "Adds a new app"
      requestBody:
        description: "A JSON object containing updated app information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Apps
      description: "Adds a new app"
      requestBody:
        description: "A JSON object containing updated app information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/app/{id}:
    get:
      tags:
        - Apps
      description: "Returns a app by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Apps
      description: "Deletes app by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/payments:
    get:
      tags:
        - Payments
      description: "Returns a list of all payments"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PaymentDto"
        "204":
          description: "No Content"
  /merchant/settings/payment:
    post:
      tags:
        - Payments
      description: "Adds a new payment"
      requestBody:
        description: "A JSON object containing updated payment information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Payments
      description: "Adds a new payment"
      requestBody:
        description: "A JSON object containing updated payment information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/payment/{id}:
    get:
      tags:
        - Payments
      description: "Returns a payment by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Payments
      description: "Deletes payment by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/sms-gateways:
    get:
      tags:
        - Sms Gateways
      description: "Returns a list of all sms-gateways"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SmsGatewayDto"
        "204":
          description: "No Content"
  /merchant/settings/sms-getway:
    post:
      tags:
        - Sms Gateways
      description: "Adds a new sms"
      requestBody:
        description: "A JSON object containing updated sms information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsGatewayDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Sms Gateways
      description: "Adds a new sms"
      requestBody:
        description: "A JSON object containing updated sms information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SmsGatewayDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/sms-getway/{id}:
    get:
      tags:
        - Sms Gateways
      description: "Returns a sms by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SmsGatewayDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Sms Gateways
      description: "Deletes sms by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

  /merchant/settings/telephonies:
    get:
      tags:
        - Telephony
      description: "Returns a list of all telephonies"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TelephonyDto"
        "204":
          description: "No Content"
  /merchant/settings/telephony:
    post:
      tags:
        - Telephony
      description: "Adds a new telephony"
      requestBody:
        description: "A JSON object containing updated telephony information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TelephonyDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Telephony
      description: "Adds a new telephony"
      requestBody:
        description: "A JSON object containing updated telephony information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TelephonyDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/telephony/{id}:
    get:
      tags:
        - Telephony
      description: "Returns a telephony by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TelephonyDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Telephony
      description: "Deletes telephony by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"


  /merchant/settings/deliveries:
    get:
      tags:
        - Delivery
      description: "Returns a list of all deliveries"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/DeliveryDto"
        "204":
          description: "No Content"
  /merchant/settings/delivery:
    post:
      tags:
        - Delivery
      description: "Adds a new delivery"
      requestBody:
        description: "A JSON object containing updated delivery information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Delivery
      description: "Adds a new delivery"
      requestBody:
        description: "A JSON object containing updated delivery information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryDto"
      responses:
        "200":
          description: "OK"
  /merchant/settings/delivery/{id}:
    get:
      tags:
        - Delivery
      description: "Returns a delivery by merchant ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Delivery
      description: "Deletes delivery by merchant Id"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

#//==================================================================================================CRM
  /merchant/crm/smss:
    get:
      summary: Get all SMS messages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmsDto'
        '204':
          description: No content
      tags:
        - CRM

  /merchant/crm/sms:
    post:
      summary: Create a new SMS message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Bad request
      tags:
        - CRM

  /merchant/crm/sms/{id}:
    get:
      summary: Get a single SMS message by ID
      parameters:
        - name: id
          in: path
          description: The ID of the SMS message
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsDto'
        '204':
          description: No content
        '400':
          description: Bad request
      tags:
        - CRM
    delete:
      summary: Delete a single SMS message by ID
      parameters:
        - name: id
          in: path
          description: The ID of the SMS message
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
      tags:
        - CRM

  /merchant/crm/messages:
    get:
      summary: Get all messages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageDto'
        '204':
          description: No content
      tags:
        - CRM

  /merchant/crm/message:
    post:
      summary: Create a new message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Bad request
      tags:
        - CRM
  /message/{id}:
    get:
      summary: Get a single message by ID
      parameters:
        - name: id
          in: path
          description: The ID of the message
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
        '204':
          description: No content
        '400':
          description: Bad request
      tags:
        - CRM
    delete:
      summary: Delete a single message by ID
      parameters:
        - name: id
          in: path
          description: The ID of the message
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
      tags:
        - CRM



#//==================================================================================================FINANCE
  /merchant/finance/outcomes:
    get:
      tags:
        - Outcomes
      description: "Returns a list of all Outcomes"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OutcomeDto"
        "204":
          description: "No Content"
  /merchant/finance/outcome:
    post:
      tags:
        - Outcomes
      description: "Adds a new outcome"
      requestBody:
        description: "A JSON object containing updated outcome information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutcomeDto"
      responses:
        "200":
          description: "OK"
    put:
      tags:
        - Outcomes
      description: "Update the outcomes"
      requestBody:
        description: "A JSON object containing updated product information"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OutcomeDto"
      responses:
        "200":
          description: "OK"
  /merchant/finance/outcome/{id}:
    get:
      tags:
        - Outcomes
      description: "Returns a outcome by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutcomeDto"
        "204":
          description: "No Content"
        "400":
          description: "Bad Request"
    delete:
      tags:
        - Outcomes
      description: "Deletes a outcome by its ID"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"

#//==================================================================================================SCHEMAS
components:
  schemas:
    SmsDto:
      type: object
      properties:
        id:
          type: "integer"
          format: "long"
        clientId:
          type: "integer"
          format: "long"
        messageId:
          type: "integer"
          format: "long"
        time:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        status:
          type: "string"

    MessageDto:
      type: object
      properties:
        id:
          type: "integer"
          format: "long"
        content:
          type: "string"
        time:
            type: "string"
            format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        smss:
          type: "array"
          items:
            $ref: "#/components/schemas/SmsDto"

    OrderDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        type:
          $ref: "#/components/schemas/OrderType"
        status:
          type: "string"
        createdAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        updatedAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        deliveredAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        deliveryAt:
          type: "string"
          format: "yyyy-MM-dd hh:mm:ss.SSSSSS"
        totalPrice:
          type: "number"
          format: "double"
        totalDiscount:
          type: "number"
          format: "double"
        comment:
          type: "string"

    OrderType:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          type: "string"

    ExtraDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        price:
          type: "integer"
          format: "double"
        description:
          $ref: "#/components/schemas/TextModel"

    LabelDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        menuId:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        textColor:
          type: "string"
        bgColor:
          type: "string"
        icon:
          type: "string"

    MenuDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"

    OptionDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        description:
          $ref: "#/components/schemas/TextModel"
        image:
          type: "string"
        price:
          type: "integer"
          format: "double"

    ProductDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        menuId:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        description:
          $ref: "#/components/schemas/TextModel"
        image:
          type: "string"
        costPrice:
          type: "integer"
          format: "double"

    MerchantDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        logo:
          type: "string"
        domain:
          type: "string"
        subdomain:
          type: "string"
        phone:
          type: "string"
        password:
          type: "string"

    OutcomeDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        name:
          type: "string"
        staff:
          $ref: "#/components/schemas/StaffDto"
        outcomeType:
          $ref: "#/components/schemas/OutcomeTypeDto"

    StaffDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        phone:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        birthDay:
          type: "string"
          format: "yyyy-MM-dd"
        image:
          type: "string"
        comment:
          type: "string"
        position:
          type: "string"

    OutcomeTypeDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        name:
          type: "string"

    TextModel:
      type: "object"
      properties:
        uz:
          type: "string"
        ru:
          type: "string"
        eng:
          type: "string"

    BranchDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        longitude:
          type: "number"
        latitude:
          type: "number"
        address:
          type: "string"

    CategoryDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        name:
          $ref: "#/components/schemas/TextModel"
        image:
          type: "string"

    PosterDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        joinPosterApiKey:
          type: "string"
        rKeeperClientId:
          type: "integer"
          format: "long"
        rKeeperClientSecret:
          type: "string"

    AppDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        googleToken:
          type: "string"
        appleToken:
          type: "string"
        telegramBotToken:
          type: "string"

    PaymentDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        paymeMerchantId:
          type: "integer"
          format: "long"
        paymeSecret:
          type: "string"
        apelsinMerchantId:
          type: "integer"
          format: "long"
        apelsinMerchantToken:
          type: "string"
        clickServiceId:
          type: "integer"
          format: "long"
        clickKey:
          type: "string"

    SmsGatewayDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        eskizId:
          type: "integer"
          format: "long"
        eskizToken:
          type: "string"
        playMobileServiceId:
          type: "integer"
          format: "long"
        playMobileKey:
          type: "string"

    TelephonyDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        onlinePbxToken:
          type: "string"

    DeliveryDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "long"
        merchantId:
          type: "integer"
          format: "long"
        yandexClientId:
          type: "integer"
          format: "long"
        yandexToken:
          type: "string"
        expressId:
          type: "integer"
          format: "long"
        expressToken:
          type: "string"


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
