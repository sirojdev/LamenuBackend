/*
 * Lamenu documentation Merchant
 * Lamenu documentation Merchant allows to you view the schema of Merchant Lamenu project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PosterDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-03T23:20:57.815967300+05:00[Asia/Tashkent]")
public class PosterDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private Integer merchantId;

  public static final String SERIALIZED_NAME_JOIN_POSTER_API_KEY = "joinPosterApiKey";
  @SerializedName(SERIALIZED_NAME_JOIN_POSTER_API_KEY)
  private String joinPosterApiKey;

  public static final String SERIALIZED_NAME_R_KEEPER_CLIENT_ID = "rKeeperClientId";
  @SerializedName(SERIALIZED_NAME_R_KEEPER_CLIENT_ID)
  private Integer rKeeperClientId;

  public static final String SERIALIZED_NAME_R_KEEPER_CLIENT_SECRET = "rKeeperClientSecret";
  @SerializedName(SERIALIZED_NAME_R_KEEPER_CLIENT_SECRET)
  private String rKeeperClientSecret;

  public PosterDto() {
  }

  public PosterDto id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public PosterDto merchantId(Integer merchantId) {
    
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Get merchantId
   * @return merchantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMerchantId() {
    return merchantId;
  }


  public void setMerchantId(Integer merchantId) {
    this.merchantId = merchantId;
  }


  public PosterDto joinPosterApiKey(String joinPosterApiKey) {
    
    this.joinPosterApiKey = joinPosterApiKey;
    return this;
  }

   /**
   * Get joinPosterApiKey
   * @return joinPosterApiKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJoinPosterApiKey() {
    return joinPosterApiKey;
  }


  public void setJoinPosterApiKey(String joinPosterApiKey) {
    this.joinPosterApiKey = joinPosterApiKey;
  }


  public PosterDto rKeeperClientId(Integer rKeeperClientId) {
    
    this.rKeeperClientId = rKeeperClientId;
    return this;
  }

   /**
   * Get rKeeperClientId
   * @return rKeeperClientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getrKeeperClientId() {
    return rKeeperClientId;
  }


  public void setrKeeperClientId(Integer rKeeperClientId) {
    this.rKeeperClientId = rKeeperClientId;
  }


  public PosterDto rKeeperClientSecret(String rKeeperClientSecret) {
    
    this.rKeeperClientSecret = rKeeperClientSecret;
    return this;
  }

   /**
   * Get rKeeperClientSecret
   * @return rKeeperClientSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getrKeeperClientSecret() {
    return rKeeperClientSecret;
  }


  public void setrKeeperClientSecret(String rKeeperClientSecret) {
    this.rKeeperClientSecret = rKeeperClientSecret;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PosterDto posterDto = (PosterDto) o;
    return Objects.equals(this.id, posterDto.id) &&
        Objects.equals(this.merchantId, posterDto.merchantId) &&
        Objects.equals(this.joinPosterApiKey, posterDto.joinPosterApiKey) &&
        Objects.equals(this.rKeeperClientId, posterDto.rKeeperClientId) &&
        Objects.equals(this.rKeeperClientSecret, posterDto.rKeeperClientSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, merchantId, joinPosterApiKey, rKeeperClientId, rKeeperClientSecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PosterDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    joinPosterApiKey: ").append(toIndentedString(joinPosterApiKey)).append("\n");
    sb.append("    rKeeperClientId: ").append(toIndentedString(rKeeperClientId)).append("\n");
    sb.append("    rKeeperClientSecret: ").append(toIndentedString(rKeeperClientSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("merchantId");
    openapiFields.add("joinPosterApiKey");
    openapiFields.add("rKeeperClientId");
    openapiFields.add("rKeeperClientSecret");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PosterDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PosterDto.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PosterDto is not found in the empty JSON string", PosterDto.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!PosterDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PosterDto` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("joinPosterApiKey") != null && !jsonObj.get("joinPosterApiKey").isJsonNull()) && !jsonObj.get("joinPosterApiKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `joinPosterApiKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("joinPosterApiKey").toString()));
      }
      if ((jsonObj.get("rKeeperClientSecret") != null && !jsonObj.get("rKeeperClientSecret").isJsonNull()) && !jsonObj.get("rKeeperClientSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rKeeperClientSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rKeeperClientSecret").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PosterDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PosterDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PosterDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PosterDto.class));

       return (TypeAdapter<T>) new TypeAdapter<PosterDto>() {
           @Override
           public void write(JsonWriter out, PosterDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PosterDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PosterDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PosterDto
  * @throws IOException if the JSON string is invalid with respect to PosterDto
  */
  public static PosterDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PosterDto.class);
  }

 /**
  * Convert an instance of PosterDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

