/*
 * Lamenu documentation Merchant
 * Lamenu documentation Merchant allows to you view the schema of Merchant Lamenu project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderPriceDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-03T23:20:57.815967300+05:00[Asia/Tashkent]")
public class OrderPriceDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_DELIVERY_PRICE = "deliveryPrice";
  @SerializedName(SERIALIZED_NAME_DELIVERY_PRICE)
  private Integer deliveryPrice;

  public static final String SERIALIZED_NAME_DELIVERY_DISCOUNT = "deliveryDiscount";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DISCOUNT)
  private Integer deliveryDiscount;

  public static final String SERIALIZED_NAME_DELIVERY_PROMO = "deliveryPromo";
  @SerializedName(SERIALIZED_NAME_DELIVERY_PROMO)
  private Integer deliveryPromo;

  public static final String SERIALIZED_NAME_PRODUCT_PRICE = "productPrice";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PRICE)
  private Integer productPrice;

  public static final String SERIALIZED_NAME_PRODUCT_DISCOUNT = "productDiscount";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DISCOUNT)
  private Integer productDiscount;

  public static final String SERIALIZED_NAME_PRODUCT_PROMO = "productPromo";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PROMO)
  private Integer productPromo;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "totalPrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private Integer totalPrice;

  public static final String SERIALIZED_NAME_TOTAL_DISCOUNT = "totalDiscount";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISCOUNT)
  private Integer totalDiscount;

  public OrderPriceDto() {
  }

  public OrderPriceDto id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public OrderPriceDto deliveryPrice(Integer deliveryPrice) {
    
    this.deliveryPrice = deliveryPrice;
    return this;
  }

   /**
   * Get deliveryPrice
   * @return deliveryPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeliveryPrice() {
    return deliveryPrice;
  }


  public void setDeliveryPrice(Integer deliveryPrice) {
    this.deliveryPrice = deliveryPrice;
  }


  public OrderPriceDto deliveryDiscount(Integer deliveryDiscount) {
    
    this.deliveryDiscount = deliveryDiscount;
    return this;
  }

   /**
   * Get deliveryDiscount
   * @return deliveryDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeliveryDiscount() {
    return deliveryDiscount;
  }


  public void setDeliveryDiscount(Integer deliveryDiscount) {
    this.deliveryDiscount = deliveryDiscount;
  }


  public OrderPriceDto deliveryPromo(Integer deliveryPromo) {
    
    this.deliveryPromo = deliveryPromo;
    return this;
  }

   /**
   * Get deliveryPromo
   * @return deliveryPromo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDeliveryPromo() {
    return deliveryPromo;
  }


  public void setDeliveryPromo(Integer deliveryPromo) {
    this.deliveryPromo = deliveryPromo;
  }


  public OrderPriceDto productPrice(Integer productPrice) {
    
    this.productPrice = productPrice;
    return this;
  }

   /**
   * Get productPrice
   * @return productPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProductPrice() {
    return productPrice;
  }


  public void setProductPrice(Integer productPrice) {
    this.productPrice = productPrice;
  }


  public OrderPriceDto productDiscount(Integer productDiscount) {
    
    this.productDiscount = productDiscount;
    return this;
  }

   /**
   * Get productDiscount
   * @return productDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProductDiscount() {
    return productDiscount;
  }


  public void setProductDiscount(Integer productDiscount) {
    this.productDiscount = productDiscount;
  }


  public OrderPriceDto productPromo(Integer productPromo) {
    
    this.productPromo = productPromo;
    return this;
  }

   /**
   * Get productPromo
   * @return productPromo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getProductPromo() {
    return productPromo;
  }


  public void setProductPromo(Integer productPromo) {
    this.productPromo = productPromo;
  }


  public OrderPriceDto totalPrice(Integer totalPrice) {
    
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * Get totalPrice
   * @return totalPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalPrice() {
    return totalPrice;
  }


  public void setTotalPrice(Integer totalPrice) {
    this.totalPrice = totalPrice;
  }


  public OrderPriceDto totalDiscount(Integer totalDiscount) {
    
    this.totalDiscount = totalDiscount;
    return this;
  }

   /**
   * Get totalDiscount
   * @return totalDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalDiscount() {
    return totalDiscount;
  }


  public void setTotalDiscount(Integer totalDiscount) {
    this.totalDiscount = totalDiscount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderPriceDto orderPriceDto = (OrderPriceDto) o;
    return Objects.equals(this.id, orderPriceDto.id) &&
        Objects.equals(this.deliveryPrice, orderPriceDto.deliveryPrice) &&
        Objects.equals(this.deliveryDiscount, orderPriceDto.deliveryDiscount) &&
        Objects.equals(this.deliveryPromo, orderPriceDto.deliveryPromo) &&
        Objects.equals(this.productPrice, orderPriceDto.productPrice) &&
        Objects.equals(this.productDiscount, orderPriceDto.productDiscount) &&
        Objects.equals(this.productPromo, orderPriceDto.productPromo) &&
        Objects.equals(this.totalPrice, orderPriceDto.totalPrice) &&
        Objects.equals(this.totalDiscount, orderPriceDto.totalDiscount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, deliveryPrice, deliveryDiscount, deliveryPromo, productPrice, productDiscount, productPromo, totalPrice, totalDiscount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderPriceDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    deliveryPrice: ").append(toIndentedString(deliveryPrice)).append("\n");
    sb.append("    deliveryDiscount: ").append(toIndentedString(deliveryDiscount)).append("\n");
    sb.append("    deliveryPromo: ").append(toIndentedString(deliveryPromo)).append("\n");
    sb.append("    productPrice: ").append(toIndentedString(productPrice)).append("\n");
    sb.append("    productDiscount: ").append(toIndentedString(productDiscount)).append("\n");
    sb.append("    productPromo: ").append(toIndentedString(productPromo)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    totalDiscount: ").append(toIndentedString(totalDiscount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("deliveryPrice");
    openapiFields.add("deliveryDiscount");
    openapiFields.add("deliveryPromo");
    openapiFields.add("productPrice");
    openapiFields.add("productDiscount");
    openapiFields.add("productPromo");
    openapiFields.add("totalPrice");
    openapiFields.add("totalDiscount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderPriceDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderPriceDto.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderPriceDto is not found in the empty JSON string", OrderPriceDto.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderPriceDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderPriceDto` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderPriceDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderPriceDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderPriceDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderPriceDto.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderPriceDto>() {
           @Override
           public void write(JsonWriter out, OrderPriceDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderPriceDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderPriceDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderPriceDto
  * @throws IOException if the JSON string is invalid with respect to OrderPriceDto
  */
  public static OrderPriceDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderPriceDto.class);
  }

 /**
  * Convert an instance of OrderPriceDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

