/*
 * Lamenu documentation Merchant
 * Lamenu documentation Merchant allows to you view the schema of Merchant Lamenu project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrderDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-03T23:20:57.815967300+05:00[Asia/Tashkent]")
public class OrderDetails {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_DELIVERED_AT = "deliveredAt";
  @SerializedName(SERIALIZED_NAME_DELIVERED_AT)
  private String deliveredAt;

  public static final String SERIALIZED_NAME_DELIVERY_AT = "deliveryAt";
  @SerializedName(SERIALIZED_NAME_DELIVERY_AT)
  private String deliveryAt;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "totalPrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private Double totalPrice;

  public static final String SERIALIZED_NAME_TOTAL_DISCOUNT = "totalDiscount";
  @SerializedName(SERIALIZED_NAME_TOTAL_DISCOUNT)
  private Double totalDiscount;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_COURIER_ID = "courierId";
  @SerializedName(SERIALIZED_NAME_COURIER_ID)
  private Integer courierId;

  public static final String SERIALIZED_NAME_COLLECTOR_ID = "collectorId";
  @SerializedName(SERIALIZED_NAME_COLLECTOR_ID)
  private Integer collectorId;

  public OrderDetails() {
  }

  public OrderDetails createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public OrderDetails updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public OrderDetails deliveredAt(String deliveredAt) {
    
    this.deliveredAt = deliveredAt;
    return this;
  }

   /**
   * Get deliveredAt
   * @return deliveredAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeliveredAt() {
    return deliveredAt;
  }


  public void setDeliveredAt(String deliveredAt) {
    this.deliveredAt = deliveredAt;
  }


  public OrderDetails deliveryAt(String deliveryAt) {
    
    this.deliveryAt = deliveryAt;
    return this;
  }

   /**
   * Get deliveryAt
   * @return deliveryAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeliveryAt() {
    return deliveryAt;
  }


  public void setDeliveryAt(String deliveryAt) {
    this.deliveryAt = deliveryAt;
  }


  public OrderDetails totalPrice(Double totalPrice) {
    
    this.totalPrice = totalPrice;
    return this;
  }

   /**
   * Get totalPrice
   * @return totalPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalPrice() {
    return totalPrice;
  }


  public void setTotalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
  }


  public OrderDetails totalDiscount(Double totalDiscount) {
    
    this.totalDiscount = totalDiscount;
    return this;
  }

   /**
   * Get totalDiscount
   * @return totalDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalDiscount() {
    return totalDiscount;
  }


  public void setTotalDiscount(Double totalDiscount) {
    this.totalDiscount = totalDiscount;
  }


  public OrderDetails comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public OrderDetails courierId(Integer courierId) {
    
    this.courierId = courierId;
    return this;
  }

   /**
   * Get courierId
   * @return courierId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCourierId() {
    return courierId;
  }


  public void setCourierId(Integer courierId) {
    this.courierId = courierId;
  }


  public OrderDetails collectorId(Integer collectorId) {
    
    this.collectorId = collectorId;
    return this;
  }

   /**
   * Get collectorId
   * @return collectorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCollectorId() {
    return collectorId;
  }


  public void setCollectorId(Integer collectorId) {
    this.collectorId = collectorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDetails orderDetails = (OrderDetails) o;
    return Objects.equals(this.createdAt, orderDetails.createdAt) &&
        Objects.equals(this.updatedAt, orderDetails.updatedAt) &&
        Objects.equals(this.deliveredAt, orderDetails.deliveredAt) &&
        Objects.equals(this.deliveryAt, orderDetails.deliveryAt) &&
        Objects.equals(this.totalPrice, orderDetails.totalPrice) &&
        Objects.equals(this.totalDiscount, orderDetails.totalDiscount) &&
        Objects.equals(this.comment, orderDetails.comment) &&
        Objects.equals(this.courierId, orderDetails.courierId) &&
        Objects.equals(this.collectorId, orderDetails.collectorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, updatedAt, deliveredAt, deliveryAt, totalPrice, totalDiscount, comment, courierId, collectorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDetails {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deliveredAt: ").append(toIndentedString(deliveredAt)).append("\n");
    sb.append("    deliveryAt: ").append(toIndentedString(deliveryAt)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    totalDiscount: ").append(toIndentedString(totalDiscount)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    courierId: ").append(toIndentedString(courierId)).append("\n");
    sb.append("    collectorId: ").append(toIndentedString(collectorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");
    openapiFields.add("deliveredAt");
    openapiFields.add("deliveryAt");
    openapiFields.add("totalPrice");
    openapiFields.add("totalDiscount");
    openapiFields.add("comment");
    openapiFields.add("courierId");
    openapiFields.add("collectorId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (OrderDetails.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderDetails is not found in the empty JSON string", OrderDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!OrderDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderDetails` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) && !jsonObj.get("updatedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedAt").toString()));
      }
      if ((jsonObj.get("deliveredAt") != null && !jsonObj.get("deliveredAt").isJsonNull()) && !jsonObj.get("deliveredAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveredAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveredAt").toString()));
      }
      if ((jsonObj.get("deliveryAt") != null && !jsonObj.get("deliveryAt").isJsonNull()) && !jsonObj.get("deliveryAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deliveryAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deliveryAt").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderDetails>() {
           @Override
           public void write(JsonWriter out, OrderDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderDetails
  * @throws IOException if the JSON string is invalid with respect to OrderDetails
  */
  public static OrderDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderDetails.class);
  }

 /**
  * Convert an instance of OrderDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

