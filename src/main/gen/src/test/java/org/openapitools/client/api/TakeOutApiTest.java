/*
 * Lamenu documentation Merchant
 * Lamenu documentation Merchant allows to you view the schema of Merchant Lamenu project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.OrderDto;
import org.openapitools.client.model.OrderWrapper;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TakeOutApi
 */
@Disabled
public class TakeOutApiTest {

    private final TakeOutApi api = new TakeOutApi();

    /**
     * Returns a order by collectorId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantOrdersGetTest() throws ApiException {
        Integer collectorId = null;
        OrderDto response = api.merchantOrdersGet(collectorId);
        // TODO: test validations
    }

    /**
     * Returns a list of all orders
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersAllGetTest() throws ApiException {
        List<OrderDto> response = api.merchantSettingsOrdersAllGet();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersCreatePostTest() throws ApiException {
        OrderWrapper orderWrapper = null;
        Integer response = api.merchantSettingsOrdersCreatePost(orderWrapper);
        // TODO: test validations
    }

    /**
     * Returns a list of all orders
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersGetTest() throws ApiException {
        List<OrderDto> response = api.merchantSettingsOrdersGet();
        // TODO: test validations
    }

    /**
     * Returns a list of all orders history
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersHistoryGetTest() throws ApiException {
        List<OrderDto> response = api.merchantSettingsOrdersHistoryGet();
        // TODO: test validations
    }

    /**
     * Deletes order by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersIdDeleteTest() throws ApiException {
        Long id = null;
        api.merchantSettingsOrdersIdDelete(id);
        // TODO: test validations
    }

    /**
     * Returns a order by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersIdGetTest() throws ApiException {
        Long id = null;
        OrderDto response = api.merchantSettingsOrdersIdGet(id);
        // TODO: test validations
    }

    /**
     * Returns a order by type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersLiveTypeGetTest() throws ApiException {
        String type = null;
        OrderDto response = api.merchantSettingsOrdersLiveTypeGet(type);
        // TODO: test validations
    }

    /**
     * Update order
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsOrdersPutTest() throws ApiException {
        OrderDto orderDto = null;
        api.merchantSettingsOrdersPut(orderDto);
        // TODO: test validations
    }

}
