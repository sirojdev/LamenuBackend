/*
 * Lamenu documentation Merchant
 * Lamenu documentation Merchant allows to you view the schema of Merchant Lamenu project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.RoomDto;
import org.openapitools.client.model.TableDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SettingsDineInApi
 */
@Disabled
public class SettingsDineInApiTest {

    private final SettingsDineInApi api = new SettingsDineInApi();

    /**
     * Deletes a room by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsRoomIdDeleteTest() throws ApiException {
        Long id = null;
        api.merchantSettingsRoomIdDelete(id);
        // TODO: test validations
    }

    /**
     * Returns a room by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsRoomIdGetTest() throws ApiException {
        Long id = null;
        RoomDto response = api.merchantSettingsRoomIdGet(id);
        // TODO: test validations
    }

    /**
     * Adds a new room
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsRoomPostTest() throws ApiException {
        RoomDto roomDto = null;
        api.merchantSettingsRoomPost(roomDto);
        // TODO: test validations
    }

    /**
     * Adds a new room
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsRoomPutTest() throws ApiException {
        RoomDto roomDto = null;
        api.merchantSettingsRoomPut(roomDto);
        // TODO: test validations
    }

    /**
     * Returns a list of all rooms
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsRoomsGetTest() throws ApiException {
        List<RoomDto> response = api.merchantSettingsRoomsGet();
        // TODO: test validations
    }

    /**
     * Deletes a table by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsTableIdDeleteTest() throws ApiException {
        Long id = null;
        api.merchantSettingsTableIdDelete(id);
        // TODO: test validations
    }

    /**
     * Returns a table by its ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsTableIdGetTest() throws ApiException {
        Long id = null;
        TableDto response = api.merchantSettingsTableIdGet(id);
        // TODO: test validations
    }

    /**
     * Adds a new table
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsTablePostTest() throws ApiException {
        TableDto tableDto = null;
        api.merchantSettingsTablePost(tableDto);
        // TODO: test validations
    }

    /**
     * Adds a new table
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsTablePutTest() throws ApiException {
        TableDto tableDto = null;
        api.merchantSettingsTablePut(tableDto);
        // TODO: test validations
    }

    /**
     * Returns a list of all tables
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void merchantSettingsTablesGetTest() throws ApiException {
        List<TableDto> response = api.merchantSettingsTablesGet();
        // TODO: test validations
    }

}
