openapi: 3.0.3
info:
  description: Lamenu documentation Merchant allows to you view the schema of Merchant
    Lamenu project
  title: Lamenu documentation Merchant
  version: 1.0.0
servers:
- url: http://0.0.0.0:9000/api/v1/
- url: http://188.166.167.80:9000/api/v1/
tags:
- description: Login endpoints
  name: Auth
- description: Endpoints related to branch
  name: Branches
- description: Endpoints related to category
  name: Categories
- description: Endpoints related to extra
  name: Extras
- description: Endpoints related to label
  name: Labels
- description: Endpoints related to menu
  name: Menus
- description: Endpoints related to option
  name: Options
- description: Endpoints related to product
  name: Products
- description: Endpoints related to outcomes
  name: Outcomes
paths:
  /merchant/settings/extras:
    get:
      description: Returns a list of all extras
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExtraDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Extras
      x-accepts: application/json
  /merchant/settings/extra:
    post:
      description: Adds a new extra
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraDto'
        description: A JSON object containing updated extra information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Extras
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Adds a new extra
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraDto'
        description: A JSON object containing updated extra information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Extras
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/extra/{id}:
    delete:
      description: Deletes a extra by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Extras
      x-accepts: application/json
    get:
      description: Returns a extra by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Extras
      x-accepts: application/json
  /merchant/settings/branches:
    get:
      description: Returns a list of all branches
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BranchDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Branches
      x-accepts: application/json
  /merchant/settings/branch:
    post:
      description: Adds a new branch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDto'
        description: A JSON object containing updated branch information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Branches
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Updates an existing branch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDto'
        description: A JSON object containing updated branch information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Branches
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/branch/{id}:
    delete:
      description: Deletes a branch by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Branches
      x-accepts: application/json
    get:
      description: Returns a branch by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Branches
      x-accepts: application/json
  /merchant/settings/categories:
    get:
      description: Returns a list of all categories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CategoryDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Categories
      x-accepts: application/json
  /merchant/settings/category:
    post:
      description: Adds a new category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        description: A JSON object containing updated category information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Categories
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Adds a new category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        description: A JSON object containing updated category information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Categories
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/category/{id}:
    delete:
      description: Deletes a category by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Categories
      x-accepts: application/json
    get:
      description: Returns a category by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Categories
      x-accepts: application/json
  /merchant/settings/labels:
    get:
      description: Returns a list of all lables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LabelDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Labels
      x-accepts: application/json
  /merchant/settings/label:
    post:
      description: Adds a new lable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelDto'
        description: A JSON object containing updated lable information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Labels
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Adds a new lable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelDto'
        description: A JSON object containing updated lable information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Labels
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/label/{id}:
    delete:
      description: Deletes a lable by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Labels
      x-accepts: application/json
    get:
      description: Returns a lable by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Labels
      x-accepts: application/json
  /merchant/settings/menus:
    get:
      description: Returns a list of all menus
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MenuDto'
                type: array
          description: OK
        "204":
          description: No Content
      security:
      - bearerAuth: []
      tags:
      - Menus
      x-accepts: application/json
  /merchant/settings/menu:
    post:
      description: Adds a new menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuDto'
        description: A JSON object containing updated menu information
        required: true
      responses:
        "200":
          description: OK
      security:
      - bearerAuth: []
      tags:
      - Menus
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Adds a new menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuDto'
        description: A JSON object containing updated menu information
        required: true
      responses:
        "200":
          description: OK
      security:
      - bearerAuth: []
      tags:
      - Menus
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/menu/{id}:
    delete:
      description: Deletes a menu by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      security:
      - bearerAuth: []
      tags:
      - Menus
      x-accepts: application/json
    get:
      description: Returns a menu by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      security:
      - bearerAuth: []
      tags:
      - Menus
      x-accepts: application/json
  /merchant/settings/options:
    get:
      description: Returns a list of all option
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OptionDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Options
      x-accepts: application/json
  /merchant/settings/option:
    post:
      description: Adds a new option
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionDto'
        description: A JSON object containing updated option information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Options
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Adds a new option
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionDto'
        description: A JSON object containing updated option information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Options
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/option/{id}:
    delete:
      description: Deletes a option by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Options
      x-accepts: application/json
    get:
      description: Returns a option by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Options
      x-accepts: application/json
  /merchant/settings/products:
    get:
      description: Returns a list of all products
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProductDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Products
      x-accepts: application/json
  /merchant/settings/product:
    post:
      description: Adds a new product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        description: A JSON object containing updated product information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Products
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Adds a new product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        description: A JSON object containing updated product information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Products
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/product/{id}:
    delete:
      description: Deletes a product by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Products
      x-accepts: application/json
    get:
      description: Returns a product by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Products
      x-accepts: application/json
  /merchant/settings/poster:
    post:
      description: Adds a new poster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PosterDto'
        description: A JSON object containing updated poster information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/poster/{id}:
    get:
      description: Returns a poster by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PosterDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/settings/app:
    post:
      description: Adds a new app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDto'
        description: A JSON object containing updated app information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/app/{id}:
    get:
      description: Returns a app by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/settings/payment:
    post:
      description: Adds a new payment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentDto'
        description: A JSON object containing updated payment information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/payment/{id}:
    get:
      description: Returns a payment by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/settings/sms-getway:
    post:
      description: Adds a new sms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsGatewayDto'
        description: A JSON object containing updated sms information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/sms-getway/{id}:
    get:
      description: Returns a sms by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsGatewayDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/settings/telephony:
    post:
      description: Adds a new telephony
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TelephonyDto'
        description: A JSON object containing updated telephony information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/telephony/{id}:
    get:
      description: Returns a telephony by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelephonyDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/settings/delivery:
    post:
      description: Adds a new delivery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryDto'
        description: A JSON object containing updated delivery information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/delivery/{id}:
    get:
      description: Returns a delivery by merchant ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/settings/badge:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: OK
        "400":
          description: Bad request
      summary: Create a new B
      tags:
      - Settings
      x-contentType: application/json
      x-accepts: application/json
  /merchant/settings/badge/{id}:
    get:
      description: Returns a badge by ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Settings
      x-accepts: application/json
  /merchant/crm/badge:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgeDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: OK
        "400":
          description: Bad request
      summary: Create a new B
      tags:
      - CRM
      x-contentType: application/json
      x-accepts: application/json
  /merchant/crm/badge/{id}:
    get:
      description: Returns a badge by ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgeDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - CRM
      x-accepts: application/json
  /merchant/crm/smss:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SmsDto'
                type: array
          description: OK
        "204":
          description: No content
      summary: Get all SMS messages
      tags:
      - CRM
      x-accepts: application/json
  /merchant/crm/sms:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: OK
        "400":
          description: Bad request
      summary: Create a new SMS message
      tags:
      - CRM
      x-contentType: application/json
      x-accepts: application/json
  /merchant/crm/sms/{id}:
    delete:
      parameters:
      - description: The ID of the SMS message
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      summary: Delete a single SMS message by ID
      tags:
      - CRM
      x-accepts: application/json
    get:
      parameters:
      - description: The ID of the SMS message
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsDto'
          description: OK
        "204":
          description: No content
        "400":
          description: Bad request
      summary: Get a single SMS message by ID
      tags:
      - CRM
      x-accepts: application/json
  /merchant/crm/messages:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageDto'
                type: array
          description: OK
        "204":
          description: No content
      summary: Get all messages
      tags:
      - CRM
      x-accepts: application/json
  /merchant/crm/message:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: integer
          description: OK
        "400":
          description: Bad request
      summary: Create a new message
      tags:
      - CRM
      x-contentType: application/json
      x-accepts: application/json
  /message/{id}:
    delete:
      parameters:
      - description: The ID of the message
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
      summary: Delete a single message by ID
      tags:
      - CRM
      x-accepts: application/json
    get:
      parameters:
      - description: The ID of the message
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: OK
        "204":
          description: No content
        "400":
          description: Bad request
      summary: Get a single message by ID
      tags:
      - CRM
      x-accepts: application/json
  /merchant/finance/outcomes:
    get:
      description: Returns a list of all Outcomes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutcomeDto'
                type: array
          description: OK
        "204":
          description: No Content
      tags:
      - Outcomes
      x-accepts: application/json
  /merchant/finance/outcome:
    post:
      description: Adds a new outcome
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutcomeDto'
        description: A JSON object containing updated outcome information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Outcomes
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update the outcomes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutcomeDto'
        description: A JSON object containing updated product information
        required: true
      responses:
        "200":
          description: OK
      tags:
      - Outcomes
      x-contentType: application/json
      x-accepts: application/json
  /merchant/finance/outcome/{id}:
    delete:
      description: Deletes a outcome by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      tags:
      - Outcomes
      x-accepts: application/json
    get:
      description: Returns a outcome by its ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutcomeDto'
          description: OK
        "204":
          description: No Content
        "400":
          description: Bad Request
      tags:
      - Outcomes
      x-accepts: application/json
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    BadgeDto:
      example:
        bgColor: bgColor
        name:
          ru: ru
          uz: uz
          eng: eng
        icon: icon
        id: 0
        textColor: textColor
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        textColor:
          type: string
        bgColor:
          type: string
        icon:
          type: string
      type: object
    SmsDto:
      example:
        clientId: 6
        messageId: 1
        id: 0
        time: time
        status: status
      properties:
        id:
          format: long
          type: integer
        clientId:
          format: long
          type: integer
        messageId:
          format: long
          type: integer
        time:
          format: yyyy-MM-dd hh:mm:ss.SSSSSS
          type: string
        status:
          type: string
      type: object
    MessageDto:
      example:
        id: 0
        time: time
        content: content
        smss:
        - clientId: 6
          messageId: 1
          id: 0
          time: time
          status: status
        - clientId: 6
          messageId: 1
          id: 0
          time: time
          status: status
      properties:
        id:
          format: long
          type: integer
        content:
          type: string
        time:
          format: yyyy-MM-dd hh:mm:ss.SSSSSS
          type: string
        smss:
          items:
            $ref: '#/components/schemas/SmsDto'
          type: array
      type: object
    OrderDto:
      properties:
        id:
          format: long
          type: integer
        type:
          $ref: '#/components/schemas/OrderType'
        status:
          type: string
        createdAt:
          format: yyyy-MM-dd hh:mm:ss.SSSSSS
          type: string
        updatedAt:
          format: yyyy-MM-dd hh:mm:ss.SSSSSS
          type: string
        deliveredAt:
          format: yyyy-MM-dd hh:mm:ss.SSSSSS
          type: string
        deliveryAt:
          format: yyyy-MM-dd hh:mm:ss.SSSSSS
          type: string
        totalPrice:
          format: double
          type: number
        totalDiscount:
          format: double
          type: number
        comment:
          type: string
      type: object
    OrderType:
      properties:
        id:
          format: long
          type: integer
        name:
          type: string
      type: object
    ExtraDto:
      example:
        price: 6
        name:
          ru: ru
          uz: uz
          eng: eng
        description:
          ru: ru
          uz: uz
          eng: eng
        id: 0
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        price:
          format: double
          type: integer
        description:
          $ref: '#/components/schemas/TextModel'
      type: object
    LabelDto:
      example:
        bgColor: bgColor
        name:
          ru: ru
          uz: uz
          eng: eng
        icon: icon
        menuId: 6
        id: 0
        textColor: textColor
      properties:
        id:
          format: long
          type: integer
        menuId:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        textColor:
          type: string
        bgColor:
          type: string
        icon:
          type: string
      type: object
    MenuDto:
      example:
        name:
          ru: ru
          uz: uz
          eng: eng
        id: 0
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
      type: object
    OptionDto:
      example:
        image: image
        price: 6
        name:
          ru: ru
          uz: uz
          eng: eng
        description:
          ru: ru
          uz: uz
          eng: eng
        id: 0
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        description:
          $ref: '#/components/schemas/TextModel'
        image:
          type: string
        price:
          format: double
          type: integer
      type: object
    ProductDto:
      example:
        image: image
        name:
          ru: ru
          uz: uz
          eng: eng
        costPrice: 1
        menuId: 6
        description:
          ru: ru
          uz: uz
          eng: eng
        id: 0
      properties:
        id:
          format: long
          type: integer
        menuId:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        description:
          $ref: '#/components/schemas/TextModel'
        image:
          type: string
        costPrice:
          format: double
          type: integer
      type: object
    MerchantDto:
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        logo:
          type: string
        domain:
          type: string
        subdomain:
          type: string
        phone:
          type: string
        password:
          type: string
      type: object
    OutcomeDto:
      example:
        outcomeType:
          merchantId: 2
          name: name
          id: 5
        merchantId: 6
        name: name
        staff:
          firstName: firstName
          lastName: lastName
          birthDay: birthDay
          image: image
          password: password
          merchantId: 5
          phone: phone
          comment: comment
          id: 1
          position: position
        id: 0
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        name:
          type: string
        staff:
          $ref: '#/components/schemas/StaffDto'
        outcomeType:
          $ref: '#/components/schemas/OutcomeTypeDto'
      type: object
    StaffDto:
      example:
        firstName: firstName
        lastName: lastName
        birthDay: birthDay
        image: image
        password: password
        merchantId: 5
        phone: phone
        comment: comment
        id: 1
        position: position
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        phone:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDay:
          format: yyyy-MM-dd
          type: string
        image:
          type: string
        comment:
          type: string
        position:
          type: string
      type: object
    OutcomeTypeDto:
      example:
        merchantId: 2
        name: name
        id: 5
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        name:
          type: string
      type: object
    TextModel:
      example:
        ru: ru
        uz: uz
        eng: eng
      properties:
        uz:
          type: string
        ru:
          type: string
        eng:
          type: string
      type: object
    BranchDto:
      example:
        address: address
        latitude: 1.4658129805029452
        name:
          ru: ru
          uz: uz
          eng: eng
        id: 0
        longitude: 6.027456183070403
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        longitude:
          type: number
        latitude:
          type: number
        address:
          type: string
      type: object
    CategoryDto:
      example:
        image: image
        name:
          ru: ru
          uz: uz
          eng: eng
        id: 0
      properties:
        id:
          format: long
          type: integer
        name:
          $ref: '#/components/schemas/TextModel'
        image:
          type: string
      type: object
    PosterDto:
      example:
        joinPosterApiKey: joinPosterApiKey
        rKeeperClientId: 1
        merchantId: 6
        id: 0
        rKeeperClientSecret: rKeeperClientSecret
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        joinPosterApiKey:
          type: string
        rKeeperClientId:
          format: long
          type: integer
        rKeeperClientSecret:
          type: string
      type: object
    AppDto:
      example:
        merchantId: 6
        telegramBotToken: telegramBotToken
        appleToken: appleToken
        id: 0
        googleToken: googleToken
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        googleToken:
          type: string
        appleToken:
          type: string
        telegramBotToken:
          type: string
      type: object
    PaymentDto:
      example:
        paymeSecret: paymeSecret
        clickKey: clickKey
        apelsinMerchantId: 5
        clickServiceId: 5
        merchantId: 6
        apelsinMerchantToken: apelsinMerchantToken
        id: 0
        paymeMerchantId: 1
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        paymeMerchantId:
          format: long
          type: integer
        paymeSecret:
          type: string
        apelsinMerchantId:
          format: long
          type: integer
        apelsinMerchantToken:
          type: string
        clickServiceId:
          format: long
          type: integer
        clickKey:
          type: string
      type: object
    SmsGatewayDto:
      example:
        eskizId: 1
        playMobileKey: playMobileKey
        merchantId: 6
        id: 0
        eskizToken: eskizToken
        playMobileServiceId: 5
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        eskizId:
          format: long
          type: integer
        eskizToken:
          type: string
        playMobileServiceId:
          format: long
          type: integer
        playMobileKey:
          type: string
      type: object
    TelephonyDto:
      example:
        merchantId: 6
        onlinePbxToken: onlinePbxToken
        id: 0
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        onlinePbxToken:
          type: string
      type: object
    DeliveryDto:
      example:
        yandexToken: yandexToken
        expressToken: expressToken
        merchantId: 6
        yandexClientId: 1
        id: 0
        expressId: 5
      properties:
        id:
          format: long
          type: integer
        merchantId:
          format: long
          type: integer
        yandexClientId:
          format: long
          type: integer
        yandexToken:
          type: string
        expressId:
          format: long
          type: integer
        expressToken:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

